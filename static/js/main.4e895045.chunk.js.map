{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App/App.js","index.js"],"names":["Searchbar","state","text","handleChange","event","setState","target","value","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","largeImageURL","tags","setModalImgInfo","toggleModal","src","alt","onClick","ImageGallery","images","map","id","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleEscButtonPress","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","children","PureComponent","App","page","showModal","status","fetchImages","request","fetch","then","res","json","array","hits","length","prevState","handlePageScroll","catch","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","color","height","width","timeout","transition","Zoom","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"gbAKqBA,E,4MACnBC,MAAQ,CACNC,KAAM,I,EAGRC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZH,KAAME,EAAME,OAAOC,S,EAIvBC,aAAe,SAAAJ,GAEb,GADAA,EAAMK,iBACyB,KAA3B,EAAKR,MAAMC,KAAKQ,OAClB,OAAOC,IAAMC,MAAM,mBAErB,EAAKC,MAAMC,SAAS,EAAKb,MAAMC,MAC/B,EAAKG,SAAS,CACZH,KAAM,M,4CAIV,WACE,OACE,wBAAQa,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaD,SAAUE,KAAKR,aAA5C,UACE,wBAAQS,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACER,MAAOS,KAAKf,MAAMC,KAClBgB,SAAUF,KAAKb,aACfY,UAAU,mBACVE,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,sC,GArCeC,a,MCHxB,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,aACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,KAEAC,GACC,EAFDC,YAEC,EADDD,iBAEA,OACE,oBAAIZ,UAAU,mBAAd,SACE,qBACEc,IAAKL,EACLM,IAAKJ,EACLK,QAAS,kBAAMJ,EAAgB,CAAEF,gBAAeC,UAChDX,UAAU,6B,MCZH,SAASiB,EAAT,GAAiE,IAAzCC,EAAwC,EAAxCA,OAAQL,EAAgC,EAAhCA,YAAaD,EAAmB,EAAnBA,gBAC1D,OACE,oBAAIZ,UAAU,eAAd,SACGkB,EAAOC,KAAI,gBAAGV,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,KAAMS,EAAtC,EAAsCA,GAAtC,OACV,cAAC,EAAD,CAEEX,aAAcA,EACdC,cAAeA,EACfC,KAAMA,EACNE,YAAaA,EACbD,gBAAiBA,GALZQ,Q,MCNA,SAASC,EAAT,GAAiC,IAAfC,EAAc,EAAdA,WAC/B,OACE,wBAAQpB,KAAK,SAASF,UAAU,SAASgB,QAASM,EAAlD,uB,UCAEC,EAAYC,SAASC,cAAc,eAEpBC,E,4MASnBC,qBAAuB,SAAAtC,GACF,WAAfA,EAAMuC,MACR,EAAK9B,MAAM+B,W,EAIfC,oBAAsB,SAAAzC,GAChBA,EAAM0C,gBAAkB1C,EAAME,QAChC,EAAKO,MAAM+B,W,uDAhBf,WACEG,OAAOC,iBAAiB,UAAWhC,KAAK0B,wB,kCAG1C,WACEK,OAAOE,oBAAoB,UAAWjC,KAAK0B,wB,oBAe7C,WACE,OAAOQ,uBACL,qBAAKnC,UAAU,UAAUgB,QAASf,KAAK6B,oBAAvC,SACE,qBAAK9B,UAAU,QAAf,SAAwBC,KAAKH,MAAMsC,aAErCb,O,GA1B6Bc,iBCKdC,E,4MACnBpD,MAAQ,CACNC,KAAM,GACNoD,KAAM,EACNrB,OAAQ,GACRsB,WAAW,EACX3C,MAAO,KACP4C,OAAQ,OACR/B,cAAe,KACfC,KAAM,M,EAeR+B,YAAc,WACZ,IAEA,EAAuB,EAAKxD,MAApBC,EAAR,EAAQA,KAAMoD,EAAd,EAAcA,KAERI,EAAO,sDAAkDxD,EAAlD,iBAA+DoD,EAA/D,qBADG,GACH,gBAJG,sCAMhB,EAAKjD,SAAS,CAAEmD,OAAQ,YAExBG,MAPiB,0BAOAD,GACdE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAM9B,EAAS8B,EAAMC,KACjB/B,EAAOgC,OAAS,GAClBtD,IAAMC,MAAM,sCAEd,EAAKP,UAAS,SAAA6D,GAAS,MAAK,CAC1BjC,OAAO,GAAD,mBAAMiC,EAAUjC,QAAhB,YAA2BA,IACjCuB,OAAQ,WACRF,KAAMY,EAAUZ,KAAO,MAEzB,EAAKa,sBAENC,OAAM,SAAAxD,GAAK,OAAI,EAAKP,SAAS,CAAEO,QAAO4C,OAAQ,iB,EAGnD5B,YAAc,WACZ,EAAKvB,UAAS,kBAAoB,CAChCkD,WADY,EAAGA,e,EAKnB5B,gBAAkB,YAA8B,IAA3BF,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KAClC,EAAKrB,SAAS,CAAEoB,gBAAeC,SAC/B,EAAKE,e,EAGPuC,iBAAmB,WACjBE,YAAW,WACTtB,OAAOuB,SAAS,CACdC,IAAKhC,SAASiC,gBAAgBC,aAC9BC,SAAU,aAEX,M,EAGL5D,SAAW,SAAAZ,GACT,EAAKG,SAAS,CAAEH,U,EAGlBmC,WAAa,WACX,EAAKoB,e,wDA/DP,SAAmBkB,EAAWT,GAAY,IAAD,OACrBA,EAAUhE,OACVc,KAAKf,MAAMC,OAG3Bc,KAAKX,SAAS,CAAE4B,OAAQ,GAAIqB,KAAM,IAClCe,YAAW,WACT,EAAKZ,gBACJ,S,oBA0DP,WACE,MAA2DzC,KAAKf,MAAxDgC,EAAR,EAAQA,OAAQsB,EAAhB,EAAgBA,UAAW9B,EAA3B,EAA2BA,cAAeC,EAA1C,EAA0CA,KAAM8B,EAAhD,EAAgDA,OAChD,OACE,qCACE,sBAAKzC,UAAU,MAAf,UACE,cAAC,EAAD,CAAWD,SAAUE,KAAKF,WACd,YAAX0C,GACC,cAAC,IAAD,CACEzC,UAAU,SACVE,KAAK,OACL2D,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAGb,cAAC,EAAD,CAAc9C,OAAQA,EAAQN,gBAAiBX,KAAKW,kBACnDM,EAAOgC,OAAS,GAAK,cAAC,EAAD,CAAQ5B,WAAYrB,KAAKqB,aAC9CkB,GACC,cAAC,EAAD,CAAOX,QAAS5B,KAAKY,YAArB,SACE,qBAAKC,IAAKJ,EAAeK,IAAKJ,SAIpC,cAAC,IAAD,CAAgBsD,WAAYC,IAAMC,UAAW,a,GAtGpB5D,a,MCNjC6D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAAS+C,eAAe,W","file":"static/js/main.4e895045.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport './Searchbar.scss';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    text: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      text: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.text.trim() === '') {\r\n      return toast.error('Enter city name');\r\n    }\r\n    this.props.onSubmit(this.state.text);\r\n    this.setState({\r\n      text: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={this.state.text}\r\n            onChange={this.handleChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import './ImageGalleryItem.scss';\r\n\r\nexport default function ImageGalleryItem({\r\n  webformatURL,\r\n  largeImageURL,\r\n  tags,\r\n  toggleModal,\r\n  setModalImgInfo,\r\n}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        onClick={() => setModalImgInfo({ largeImageURL, tags })}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport './ImageGallery.scss';\r\n\r\nexport default function ImageGallery({ images, toggleModal, setModalImgInfo }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ webformatURL, largeImageURL, tags, id }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          toggleModal={toggleModal}\r\n          setModalImgInfo={setModalImgInfo}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import './Button.scss';\r\n\r\nexport default function Button({ onLoadMore }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends PureComponent {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleEscButtonPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleEscButtonPress);\r\n  }\r\n\r\n  handleEscButtonPress = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './App.scss';\nimport Searchbar from '../Searchbar/Searchbar';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Button from '../Button/Button';\nimport Modal from '../Modal/Modal';\n\nexport default class App extends Component {\n  state = {\n    text: '',\n    page: 1,\n    images: [],\n    showModal: false,\n    error: null,\n    status: 'idle',\n    largeImageURL: null,\n    tags: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.text;\n    const nextQuery = this.state.text;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({ images: [], page: 1 });\n      setTimeout(() => {\n        this.fetchImages();\n      }, 1500);\n    }\n  }\n\n  fetchImages = () => {\n    const API_KEY = '22952317-a5881606497ad665bd114491c';\n    const BASE_URL = 'https://pixabay.com/api';\n    const { text, page } = this.state;\n    const perPage = 12;\n    const request = `/?image_type=photo&orientation=horizontal&q=${text}&page=${page}&per_page=${perPage}&key=${API_KEY}`;\n\n    this.setState({ status: 'pending' });\n\n    fetch(BASE_URL + request)\n      .then(res => res.json())\n      .then(array => {\n        const images = array.hits;\n        if (images.length < 1) {\n          toast.error('Nothing found, specify your search');\n        }\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          status: 'resolved',\n          page: prevState.page + 1,\n        }));\n        this.handlePageScroll();\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  setModalImgInfo = ({ largeImageURL, tags }) => {\n    this.setState({ largeImageURL, tags });\n    this.toggleModal();\n  };\n\n  handlePageScroll = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 1000);\n  };\n\n  onSubmit = text => {\n    this.setState({ text });\n  };\n\n  onLoadMore = () => {\n    this.fetchImages();\n  };\n\n  render() {\n    const { images, showModal, largeImageURL, tags, status } = this.state;\n    return (\n      <>\n        <div className=\"App\">\n          <Searchbar onSubmit={this.onSubmit} />\n          {status === 'pending' && (\n            <Loader\n              className=\"Loader\"\n              type=\"Puff\"\n              color=\"#00BFFF\"\n              height={150}\n              width={150}\n              timeout={2000}\n            />\n          )}\n          <ImageGallery images={images} setModalImgInfo={this.setModalImgInfo} />\n          {images.length > 0 && <Button onLoadMore={this.onLoadMore} />}\n          {showModal && (\n            <Modal onClose={this.toggleModal}>\n              <img src={largeImageURL} alt={tags} />\n            </Modal>\n          )}\n        </div>\n        <ToastContainer transition={Zoom} autoClose={3000} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './styles/shared.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}