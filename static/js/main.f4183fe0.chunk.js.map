{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","services/apiService.js","components/App/App.js","index.js"],"names":["Searchbar","onSubmit","useState","text","setText","className","event","preventDefault","trim","toast","error","type","value","onChange","target","autoComplete","autoFocus","placeholder","ImageGalleryItem","webformatURL","largeImageURL","tags","setModalImgInfo","src","alt","onClick","ImageGallery","images","map","id","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleEscButtonPress","code","props","onClose","handleBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","children","PureComponent","axios","defaults","baseURL","fetchImages","page","a","process","request","get","data","hits","App","setPage","setImages","showModal","setShowModal","setError","status","setStatus","setLargeImageURL","setTags","useEffect","getImages","length","prev","handlePageScroll","console","log","message","toggleModal","scrollTo","top","documentElement","scrollHeight","behavior","showLoadMore","query","style","textAlign","color","height","width","timeout","transition","Zoom","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4183fe0.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport './Searchbar.scss';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [text, setText] = useState('');\r\n\r\n  const handleChange = event => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (text.trim() === '') {\r\n      return toast.error('Enter valid search');\r\n    }\r\n    onSubmit(text);\r\n    setText('');\r\n  };\r\n\r\n  return (\r\n    <header className={`Searchbar animate__animated animate__fadeInDown`}>\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          value={text}\r\n          onChange={handleChange}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n// export default class Searchbar extends Component {\r\n//   state = {\r\n//     text: '',\r\n//   };\r\n\r\n//   handleChange = event => {\r\n//     this.setState({\r\n//       text: event.target.value,\r\n//     });\r\n//   };\r\n\r\n//   handleSubmit = event => {\r\n//     event.preventDefault();\r\n//     if (this.state.text.trim() === '') {\r\n//       return toast.error('Enter city name');\r\n//     }\r\n//     this.props.onSubmit(this.state.text);\r\n//     this.setState({\r\n//       text: '',\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <header className=\"Searchbar\">\r\n//         <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n//           <button type=\"submit\" className=\"SearchForm-button\">\r\n//             <span className=\"SearchForm-button-label\">Search</span>\r\n//           </button>\r\n\r\n//           <input\r\n//             value={this.state.text}\r\n//             onChange={this.handleChange}\r\n//             className=\"SearchForm-input\"\r\n//             type=\"text\"\r\n//             autoComplete=\"off\"\r\n//             autoFocus\r\n//             placeholder=\"Search images and photos\"\r\n//           />\r\n//         </form>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n","import './ImageGalleryItem.scss';\r\nimport PropTypes from 'prop-types';\r\nimport 'animate.css';\r\n\r\nexport default function ImageGalleryItem({ webformatURL, largeImageURL, tags, setModalImgInfo }) {\r\n  return (\r\n    <li className={`ImageGalleryItem animate_animated animate__zoomIn`}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        onClick={() => setModalImgInfo({ largeImageURL, tags })}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  setModalImgInfo: PropTypes.func.isRequired,\r\n};\r\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport './ImageGallery.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGallery({ images, setModalImgInfo }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ webformatURL, largeImageURL, tags, id }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          setModalImgInfo={setModalImgInfo}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  setModalImgInfo: PropTypes.func.isRequired,\r\n};\r\n","import './Button.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onLoadMore }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Modal.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends PureComponent {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleEscButtonPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleEscButtonPress);\r\n  }\r\n\r\n  handleEscButtonPress = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className={`Modal animate__animated animate__jackInTheBox`}>{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\n\r\nconst fetchImages = async (text, page) => {\r\n  const API_KEY = process.env.REACT_APP_IMAGE_API_KEY;\r\n  const request = `/?image_type=photo&orientation=horizontal&q=${text}&page=${page}&per_page=12&key=${API_KEY}`;\r\n\r\n  const { data } = await axios.get(request);\r\n  const images = data.hits;\r\n  return images;\r\n};\r\n\r\nexport default fetchImages;\r\n","// import { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './App.scss';\nimport Searchbar from '../Searchbar/Searchbar';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Button from '../Button/Button';\nimport Modal from '../Modal/Modal';\nimport fetchImages from '../../services/apiService';\n\nexport default function App() {\n  const [text, setText] = useState('');\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [largeImageURL, setLargeImageURL] = useState(null);\n  const [tags, setTags] = useState(null);\n\n  useEffect(() => {\n    if (!text) return;\n    getImages();\n  }, [text]);\n\n  const getImages = async () => {\n    setStatus('pending');\n    try {\n      const images = await fetchImages(text, page);\n      if (images.length < 1) {\n        toast.error('Nothing found, specify your search');\n      }\n      setImages(prev => [...prev, ...images]);\n      setStatus('resolved');\n      setPage(prev => prev + 1);\n      if (page !== 1) {\n        handlePageScroll();\n      }\n    } catch (error) {\n      console.log('Error:', error.message);\n      setError({ error });\n    } finally {\n      setStatus('resolved');\n    }\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const setModalImgInfo = ({ largeImageURL, tags }) => {\n    setLargeImageURL(largeImageURL);\n    setTags(tags);\n    toggleModal();\n  };\n\n  const handlePageScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const onSubmit = query => {\n    if (query === text) return;\n    setText(query);\n    setPage(1);\n    setImages([]);\n  };\n\n  const onLoadMore = () => {\n    getImages();\n  };\n\n  const showLoadMore = images.length > 0 && images.length >= 12;\n\n  return (\n    <>\n      <div className=\"App\">\n        <Searchbar onSubmit={onSubmit} />\n        {images.length === 0 && status !== 'pending' && (\n          <h2 style={{ textAlign: 'center' }}>Nothing to show! 😎 Use Search above😉</h2>\n        )}\n        {status === 'pending' && (\n          <Loader\n            className=\"Loader\"\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={150}\n            width={150}\n            timeout={2000}\n          />\n        )}\n        <ImageGallery images={images} setModalImgInfo={setModalImgInfo} />\n        {showLoadMore && <Button onLoadMore={onLoadMore} />}\n        {showModal && (\n          <Modal onClose={toggleModal}>\n            <img src={largeImageURL} alt={tags} width=\"800\" height=\"600\" />\n          </Modal>\n        )}\n      </div>\n      <ToastContainer transition={Zoom} autoClose={3000} />\n    </>\n  );\n}\n\n// * WORKING CLASS COMPONENT\n// export default class App extends Component {\n//   state = {\n//     text: '',\n//     page: 1,\n//     images: [],\n//     showModal: false,\n//     error: null,\n//     status: 'idle',\n//     largeImageURL: null,\n//     tags: null,\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const prevQuery = prevState.text;\n//     const nextQuery = this.state.text;\n\n//     if (prevQuery !== nextQuery) {\n//       this.setState({ images: [], page: 1 });\n//       this.fetchImages();\n//     }\n//   }\n\n// fetchImages = () => {\n//   const API_KEY = '22952317-a5881606497ad665bd114491c';\n//   const BASE_URL = 'https://pixabay.com/api';\n//   const { text, page } = this.state;\n//   const perPage = 12;\n//   const request = `/?image_type=photo&orientation=horizontal&q=${text}&page=${page}&per_page=${perPage}&key=${API_KEY}`;\n\n//   this.setState({ status: 'pending' });\n\n//   fetch(BASE_URL + request)\n//     .then(res => res.json())\n//     .then(array => {\n//       const images = array.hits;\n//       if (images.length < 1) {\n//         toast.error('Nothing found, specify your search');\n//       }\n// this.setState(prevState => ({\n//   images: [...prevState.images, ...images],\n//   status: 'resolved',\n//   page: prevState.page + 1,\n// }));\n//       if (page !== 1) {\n//         this.handlePageScroll();\n//       }\n//     })\n//     .catch(error => this.setState({ error, status: 'rejected' }));\n// };\n\n// toggleModal = () => {\n//   this.setState(({ showModal }) => ({\n//     showModal: !showModal,\n//   }));\n// };\n\n// setModalImgInfo = ({ largeImageURL, tags }) => {\n//   this.setState({ largeImageURL, tags });\n//   this.toggleModal();\n// };\n\n// handlePageScroll = () => {\n//   window.scrollTo({\n//     top: document.documentElement.scrollHeight,\n//     behavior: 'smooth',\n//   });\n// };\n\n// onSubmit = text => {\n//   this.setState({ text, page: 1 });\n// };\n\n// onLoadMore = () => {\n//   this.fetchImages();\n// };\n\n//   render() {\n//     const { images, showModal, largeImageURL, tags, status } = this.state;\n//     const showLoadMore = images.length > 0 && images.length >= 12;\n// return (\n//   <>\n//     <div className=\"App\">\n//       <Searchbar onSubmit={this.onSubmit} />\n//       {status === 'pending' && (\n//         <Loader\n//           className=\"Loader\"\n//           type=\"Puff\"\n//           color=\"#00BFFF\"\n//           height={150}\n//           width={150}\n//           timeout={2000}\n//         />\n//       )}\n//       <ImageGallery images={images} setModalImgInfo={this.setModalImgInfo} />\n//       {showLoadMore && <Button onLoadMore={this.onLoadMore} />}\n//       {showModal && (\n//         <Modal onClose={this.toggleModal}>\n//           <img src={largeImageURL} alt={tags} />\n//         </Modal>\n//       )}\n//     </div>\n//     <ToastContainer transition={Zoom} autoClose={3000} />\n//   </>\n// );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './styles/shared.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}